// Generated by CoffeeScript 1.6.3
(function() {
  var SALT_WORK_FACTOR, User, bcrypt, db, nano;

  bcrypt = require('bcrypt');

  SALT_WORK_FACTOR = 10;

  nano = require('nano')('http://localhost:5984');

  db = nano.use('arachneusers');

  User = function(email, password) {
    this.email = email;
    return this.password = password;
  };

  User.prototype.save = function(callback) {
    var user;
    user = this;
    return bcrypt.genSalt(SALT_WORK_FACTOR, function(err, salt) {
      if (err) {
        callback(error);
      }
      return bcrypt.hash(user.password, salt, function(err, hash) {
        var attributes;
        if (err) {
          callback(error);
        }
        user.password = hash;
        attributes = {
          email: user.email,
          password: user.password
        };
        return db.insert(attributes, function(err, obj) {
          if (typeof error === "undefined" || error === null) {
            console.log("no error in user insert");
            return callback(err, obj);
          } else {
            return callback(err, obj);
          }
        });
      });
    });
  };

  User.prototype.comparePassword = function(candidatePassword, cb) {
    return bcrypt.compare(candidatePassword, this.password, function(err, isMatch) {
      if (err) {
        return cb(err);
      }
      return cb(null, isMatch);
    });
  };

  User.prototype.findOne = function(callback) {
    return db.view('users', 'by_email', {
      keys: [this.email]
    }, function(error, object) {
      if (error == null) {
        if (object.rows[0] != null) {
          return callback(error, object.rows[0].value);
        }
      } else {
        return callback(error);
      }
    });
  };

  module.exports = User;

}).call(this);
