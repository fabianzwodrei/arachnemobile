// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['../../controller/controller', '../../models/cmsNode', 'text!../../../layouts/cmsNode.html'], function(Controller, CmsNode, Layout) {
    var CmsNodeView, _ref;
    return CmsNodeView = (function(_super) {
      __extends(CmsNodeView, _super);

      function CmsNodeView() {
        _ref = CmsNodeView.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      CmsNodeView.prototype.className = 'container';

      CmsNodeView.prototype.id = 'cmsNode-view';

      CmsNodeView.prototype.layout = _.template(Layout);

      CmsNodeView.prototype.initialize = function(params) {
        this.cmsNode = new CmsNode({
          id: params.id
        });
        this.cmsNode.bind('change', this.render, this);
        return this.cmsNode.fetch();
      };

      CmsNodeView.prototype.render = function(event) {
        return $(this.el).html(this.layout({
          cmsNode: this.cmsNode.toJSON()
        }));
      };

      CmsNodeView.prototype.release = function() {
        this.undelegateEvents();
        this.cmsNode.unbind('change', this.render, this);
        return this.remove();
      };

      return CmsNodeView;

    })(Controller);
  });

}).call(this);
