// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['../../controller/controller', 'models/user', 'text!../../../layouts/login.html', 'text!../../../templates/error.html', 'text!../../../layouts/userStatus.html'], function(Controller, User, layout, ErrorTemplate, UserStatusLayout) {
    var LoginController, _ref;
    return LoginController = (function(_super) {
      __extends(LoginController, _super);

      function LoginController() {
        _ref = LoginController.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      LoginController.prototype.layout = _.template(layout);

      LoginController.prototype.errorTemplate = _.template(ErrorTemplate);

      LoginController.prototype.userStatusLayout = _.template(UserStatusLayout);

      LoginController.prototype.id = 'loginView';

      LoginController.prototype.className = 'container';

      LoginController.prototype.events = {
        'submit': 'login'
      };

      LoginController.prototype.initialize = function(params) {
        this.user = params.user;
        this.user.bind('change:userId', this.render, this);
        this.user.bind('error', this.renderError, this);
        return this.render();
      };

      LoginController.prototype.render = function() {
        if (this.user.attributes.logoutFlag === true || this.user.attributes.sid === '' || this.user.attributes.sid === void 0) {
          return $(this.el).html(this.layout);
        } else {
          return location.href = '#';
        }
      };

      LoginController.prototype.renderError = function(event) {
        this.user.attributes.logoutFlag = true;
        this.render();
        $(this.el).find('#login-form').append(this.errorTemplate({
          template: this.errorTemplate,
          errorMsg: "Benutzername und/oder Passwort waren falsch!"
        }));
        return this.el;
      };

      LoginController.prototype.login = function(event) {
        event.preventDefault();
        return this.user.login({
          username: $(this.el).find('#inputUsername').val(),
          password: $(this.el).find('#inputPassword').val()
        });
      };

      LoginController.prototype.release = function() {
        this.undelegateEvents();
        return this.remove();
      };

      return LoginController;

    })(Controller);
  });

}).call(this);
